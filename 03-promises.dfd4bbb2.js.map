{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,QAAQC,iBAAiB,UAAUC,eAAgBC,GACxEA,EAAEC,iBACF,MAAMb,EAAQc,SAASC,KAAKC,SAAShB,MAAMiB,OACrCC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMrB,EAAWqB,EAAI,EACfC,EAAerB,EAAQoB,EAAIF,EAEjC,IACE,MAAMI,QAAexB,EAAcC,EAAUsB,GAC7CE,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBH,EAAIvB,eAAoBuB,EAAEtB,U,CACvE,MAAO0B,GACPH,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBD,EAAE3B,eAAmB2B,EAAE1B,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('form').addEventListener('submit', async function (e) {\n  e.preventDefault();\n  const delay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n    \n    try {\n      const result = await createPromise(position, currentDelay);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    } catch (error) {\n      Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n    }\n  }\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","async","e","preventDefault","parseInt","this","elements","value","step","amount","i","currentDelay","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.dfd4bbb2.js.map"}